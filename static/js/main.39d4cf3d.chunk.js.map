{"version":3,"sources":["App.js","reportWebVitals.js","i18n.js","index.js"],"names":["App","useTranslation","t","i18n","changeLanguage","language","options","key","text","Trans","i18nKey","value","useState","state","setState","className","Header","size","Button","basic","color","onClick","Flag","name","Divider","Form","Group","widths","Input","fluid","label","placeholder","Select","inline","Radio","checked","onChange","TextArea","Checkbox","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","detection","order","cache","interpolation","escapeValue","styleLink","document","createElement","rel","href","head","appendChild","ReactDOM","render","StrictMode","fallback","getElementById"],"mappings":"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","file":"static/js/main.39d4cf3d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Form } from 'semantic-ui-react'\nimport './App.css';\nimport {Trans, useTranslation} from 'react-i18next';\nimport { Button,Divider } from 'semantic-ui-react';\nimport { Flag ,Header} from 'semantic-ui-react'\nfunction App() {\n  \n  const {t,i18n} = useTranslation()\n  const changeLanguage = (language)=>{\n    i18n.changeLanguage(language);\n  };\n\n  const options = [\n    { key: 'm', text: <Trans i18nKey=\"male\"></Trans> , value: 'male' },\n    { key: 'f', text: <Trans i18nKey=\"female\"></Trans>, value: 'female' },\n    { key: 'o', text: <Trans i18nKey=\"other\"></Trans>, value: 'other' },\n  ]\n  const [state, setState] = useState({});\n  \n  return (\n    <div className=\"App\">\n\n<Header size='medium'><Trans i18nKey=\"description\"></Trans></Header>\n\n    <Button basic color='blue' onClick={()=> changeLanguage(\"en\")}><Flag name='gb eng' />English</Button>\n    <Button basic color='violet' onClick={()=> changeLanguage(\"si\")}><Flag name='lk' />සිංහල</Button>\n    <Divider />\n\n    <Form size='big' key='big'>\n        <Form.Group widths='equal' >\n          <Form.Input fluid label={t('firstName')} placeholder={t('firstName')} />\n          <Form.Input fluid label={t('lastName')} placeholder={t('lastName')} />\n          <Form.Input label={t('address')} placeholder={t('address')} />\n          <Form.Input label={t('phone')} placeholder={t('phone')} />\n          <Form.Select\n            fluid\n            label={t('gender')}\n            options={options}\n            placeholder={t('gender')}\n          />\n        </Form.Group>\n        <Form.Group inline>\n          <label>{t('size')}</label>\n          <Form.Radio\n            label={t('small')}\n            value='sm'\n            checked={state === 'sm'}\n            onChange={() => setState('sm')}\n          />\n          <Form.Radio\n            label={t('medium')}\n            value='md'\n            checked={state === 'md'}\n            onChange={() => setState('md')}\n          />\n          <Form.Radio\n            label={t('large')}\n            value='lg'\n            checked={state === 'lg'}\n            onChange={() => setState('lg')}\n          />\n        </Form.Group>\n        <Form.TextArea label={t('about')} placeholder={t('tellUsMore')}/>\n        <Form.Checkbox label={t('termAndConditions')}/>\n        <Form.Button basic color='blue'>{t('submit')}</Form.Button>\n        \n      </Form>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import  i18n  from \"i18next\";\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport { initReactI18next} from 'react-i18next';\n\ni18n.use(Backend).use(LanguageDetector).use(initReactI18next).init({\n    fallbackLng:'en',\n    debug:true,\n    detection:{\n        order:['queryString','cookie'],\n        cache:['cookie']\n    },\n    interpolation:{\n        escapeValue:false\n    }\n})\n\nexport default i18n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\n\n// TODO: Switch to https://github.com/palmerhq/the-platform#stylesheet when it will be stable\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={<div>Loading...</div>}>\n      <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}